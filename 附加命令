1.chroot命令用来在指定的根目录下运行指令。

chroot，即 change root directory （更改 root 目录）。在 linux 系统中，系统默认的目录结构都是以/，即是以根 (root) 开始的。
而在使用 chroot 之后，系统的目录结构将以指定的位置作为/位置。 在经过 chroot 命令之后，系统读取到的目录和文件将不在是旧系统根下的而是新根下
（即被指定的新的位置）的目录结构和文件，
因此它带来的好处大致有以下3个： 
   增加了系统的安全性，限制了用户的权力：在经过 chroot 之后，在新根下将访问不到旧系统的根目录结构和文件，
这样就增强了系统的安全性。这个一般是在登录 (login) 前使用 chroot，以此达到用户不能访问一些特定的文件。 
   建立一个与原系统隔离的系统目录结构，方便用户的开发： 使用 chroot 后，系统读取的是新根下的目录和文件，这是一个与原系统根下文件不相关的目录结构。
在这个新的环境中，可以用来测试软件的静态编译以及一些与系统不相关的独立开发。 
   切换系统的根目录位置，引导 Linux 系统启动以及急救系统等： chroot 的作用就是切换系统的根位置，而这个作用最为明显的是在系统初始引导磁盘的处理过程中使用，
从初始 RAM 磁盘 (initrd) 切换系统的根位置并执行真正的 init。另外，当系统出现一些问题时，我们也可以使用 chroot 来切换到一个临时的系统。 
语法 chroot(选项)(参数) 
选项 --help：在线帮助； --version：显示版本信息。 
参数 目录：指定新的根目录； 指令：指定要执行的指令。 
实例 将target作为根目录（运行其中的/bin/sh）: chroot target /bin/sh


2.ubuntu su sudo
（1）su命令短暂的更改用户身份

su命令的使用格式如下：

su option username arguments

单独使用su命令，你变成root用户，但是仍然保留你原来的常规用户的环境变量，你的当前目录也不会变化。

你使用su -命令，你变成root用户，并且继承了root用户的环境变量

想要变成其他用户，需要在命令行中指定用户名：su – other_user

如果要回到你原来的用户身份，使用exit命令。

（2）sudo命令授予超级用户权限

sudo是和命令结合使用的。sudo命令的使用格式如下：

sudo command

3.sudo nautilus
这个命令就是以root权限打开一个窗口，来管理文件。

4.删除使用apt-get安装的文件

sudo apt-get autoremove

 
5.
last显示之前登录的用户
history命令可以查看命令的执行历史。按下Ctrl+R然后输入关键字。
例如，我搜索”cat”，则显示以前的命令中含有”cat”的命令“cat anaconda-ks.cfg”。按回车，就可以重新执行这条命令了。
常用日志文件如下：
　　　　access-log　　　纪录HTTP/web的传输 
　　　　acct/pacct　　　纪录用户命令 
　　　　aculog　　　　　纪录MODEM的活动 
　　　　btmp　　　　　　纪录失败的纪录 
　　　　lastlog　　　　 纪录最近几次成功登录的事件和最后一次不成功的登录 
　　　　messages　　　　从syslog中记录信息（有的链接到syslog文件） 
　　　　sudolog　　　　 纪录使用sudo发出的命令 
　　　　sulog　　　　　 纪录使用su命令的使用 
　　　　syslog　　　　　从syslog中记录信息（通常链接到messages文件） 
　　　　utmp　　　　　　纪录当前登录的每个用户 
　　　　wtmp　　　　　　一个用户每次登录进入和退出时间的永久纪录 
　　　　xferlog　　　　 纪录FTP会话


6.linux下patch命令使用详解---linux打补丁命令
功能说明：修补文件。

7.apt-cache是Linux下的apt软件包管理工具，使用它能查询到apt的二进制软件包缓存文件。

apt-cache show package_name
显示指定软件包的信息，包括版本号，安装状态和包依赖关系等.

apt-cache search package_name
搜索软件包，可以按关键字查找软件包,通常用于查询的关键字会使用软件包的名字或软件包的一部分.

apt-cache showpkg package_name
显示软件包的依赖关系信息.

apt-cache stats
显示当前系统所使用的数据源的统计信息,用户可以使用该命令查看数据源的相关统计信息.

apt-cache policy package_name
显示软件包的安装状态和版本信息.

apt-cache depends package_name
显示指定软件包所依赖的软件包。当用户需要了解某个软件包依赖于其他哪些包时,可以使用apt-cache depends来查询包依赖关系.

apt-cache rdepends package_name
查询指定软件包的反向依赖关系,即那些其他的软件包需要依赖你所指定的软件包做为安装和运行的必须条件.

apt-cache dump
显示缓存中的每个软件包的简要描述信息.

apt-cache unmet
显示不符合一致性的依赖关系.



8.
查看Ubuntu中安装的软件    dpkg -l | grep ftp
查看CentOS中安装的软件    rpm -qa | grep

9.关闭防火墙
Ubuntu
ufw disable
CentOS
service iptables stop
